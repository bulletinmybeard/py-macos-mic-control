[tool.poetry]
name = "py-macos-mic-control"
version = "0.1.0"
description = "Automatic microphone volume control for macOS calls and meetings"
authors = ["Robin Schulz <hello@rschu.me>"]
license = "MIT"
readme = "README.md"
packages = [{include = "mic_control"}]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = ">=3.12,<3.14"
sounddevice = "^0.5.1"
numpy = "^2.1.2"

[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
isort = "^5.13.2"
flake8 = "^7.1.1"
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
bandit = "^1.7.10"
safety = "^3.2.10"
pip-audit = "^2.7.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
mic-control = "mic_control.__main__:main"

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/.venv
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
extend_skip = [".venv"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = """
    -vv
    -ra
    --cov=mic_control
    --cov-report=term-missing
    --no-cov-on-fail
"""
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.bandit]
exclude_dirs = [".venv", "tests"]
targets = ["mic_control"]
skips = ["B404"]
